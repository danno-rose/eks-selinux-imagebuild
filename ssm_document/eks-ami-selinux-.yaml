schemaVersion: "0.3"
description: SSM Document to create custom eks-ami
assumeRole: ${automation_role}
parameters:
  instanceID:
    description: The ID of the instance we are going to install and configure the EKS SELINUX pre-reqs on.
    type: String
  documentActions:
    type: string
    description: (Optional) Used to tell document whether to peform the steps to install and configure AMI requirements
    allowedValues:
      - installRequirements
      - eksClusterTest
  ScriptsBucket:
    type: String
mainSteps:
  - name: documentActions
    action: "aws:branch"
    inputs:
      Choices:
        - NextStep: installPreReqs
          Variable: "{{documentActions}}"
          StringEquals: installRequirements
        - NextStep: eksCreateNodeGroup
          Variable: "{{documentActions}}"
          StringEquals: eksClusterTest
      Default: EndSSMDocument

  - name: installRequirements
    action: aws:runCommand
    maxAttempts: 3
    timeoutSeconds: 300
    onFailure: "step:EndSSMDocument"
    nextStep: EndSSMDocument
    inputs:
      DocumentName: AWS-RunShellScript
      CloudWatchOutputConfig:
        CloudWatchOutputEnabled: true
      InstanceIds:
        - "{{InstanceId}}"
      Parameters:
        commands:
          - yum install -y aws-cli
          - aws s3 cp s3://{{ScriptsBucket}}/scripts/selinux selinux
          - aws s3 cp s3://{{ScriptsBucket}}/scripts/cluster-autoscaler.pp cluster-autoscaler.pp
          - >-
            ## update system and install seLinux tools
            sudo yum update -y
            sudo yum install -y policycoreutils-python selinux-policy-devel jq

            # ## Install the SELinux Tools -- install RPMS without dependancies, in order to get around cyclic dependancies
            cd ~
            wget https://rpmfind.net/linux/centos/7.7.1908/os/x86_64/Packages/setroubleshoot-server-3.2.30-7.el7.x86_64.rpm
            wget https://rpmfind.net/linux/centos/7.7.1908/os/x86_64/Packages/setroubleshoot-plugins-3.0.67-4.el7.noarch.rpm
            sudo rpm -i  --nodeps setroubleshoot-server-3.2.30-7.el7.x86_64.rpm
            sudo rpm -i  --nodeps setroubleshoot-plugins-3.0.67-4.el7.noarch.rpm
            #Then yum re-install to include dependancies
            sudo yum reinstall -y setroubleshoot-server-3.2.30-7.el7.x86_64.rpm
            sudo yum reinstall -y setroubleshoot-plugins-3.0.67-4.el7.noarch.rpm

            ## Installing the Container-SELinux Policy
            sudo yum install -y http://vault.centos.org/7.6.1810/extras/x86_64/Packages/container-selinux-2.68-1.el7.noarch.rpm

            ## Update SELinux Config Files
            sudo sed -i 's/SELINUX=disabled/SELINUX=enforcing/g' /etc/selinux/config

            ## updating the docker runtime config
            VAL=$(cat /etc/docker/daemon.json)
            sudo mv /etc/docker/daemon.json /etc/docker/daemon.json_bak
            echo $VAL | jq '. += {"selinux-enabled":true}' | sudo tee -a /etc/docker/daemon.json
          - echo "Installing custom linux modules"
          - sudo semodule -i /buildfiles/cluster-autoscaler.pp

  - name: startInstances
    description: this will be the instance that is used to perform the kubectl commands
    action: "aws:runInstances"
    timeoutSeconds: 3600
    maxAttempts: 1
    onFailure: terminateInstance
    nextStep: terminateInstance
    inputs:
      ImageId: "{{ amiId }}"
      InstanceType: "{{instanceType}}"
      MinInstanceCount: 1
      MaxInstanceCount: 1
      SubnetId: "{{ subnetID }}"
      SecurityGroupIds:
        - "{{ securityGroupID }}"
      UserData: "{{SSMInstallationUserData}}"
      IamInstanceProfileName: "{{ IAMInstanceProfile }}"

  - name: terminateInstance
    action: "aws:changeInstanceState"
    timeoutSeconds: 1200
    maxAttempts: 1
    onFailure: EndSSMDocument
    nextStep: EndSSMDocument
    inputs:
      InstanceIds:
        - "{{ startInstances.InstanceIds }}"
      DesiredState: terminated

  - name: EndSSMDocument
    action: "aws:sleep"
    maxAttempts: 3
    isCritical: false
    isEnd: true
    onFailure: Continue
    inputs:
      Duration: PT5S
