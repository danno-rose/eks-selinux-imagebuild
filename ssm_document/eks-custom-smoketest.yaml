schemaVersion: "0.3"
description: SSM Document to create custom eks-ami
parameters:
  amiId:
    type: String
    description: base ami to build from (we are using Amazon Linux 2 EKS-Optimized-AMI)yep
  instanceType:
    type: String
    default: t2.medium
  SSMInstallationUserData:
    type: String
    description: userdata installing ssm - used when launching inital instance (base64Encoded)
    default: "IyEvYmluL2Jhc2gKY2QgL3RtcApzdWRvIHl1bSBpbnN0YWxsIC15IGh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9lYzItZG93bmxvYWRzLXdpbmRvd3MvU1NNQWdlbnQvbGF0ZXN0L2xpbnV4X2FtZDY0L2FtYXpvbi1zc20tYWdlbnQucnBtCnN1ZG8gc3lzdGVtY3RsIGVuYWJsZSBhbWF6b24tc3NtLWFnZW50CnN1ZG8gc3lzdGVtY3RsIHN0YXJ0IGFtYXpvbi1zc20tYWdlbnQ="
  subnetID:
    type: String
  securityGroupID:
    type: String
  IAMInstanceProfile:
    type: String
mainSteps:
  - name: startInstances
    action: "aws:runInstances"
    timeoutSeconds: 3600
    maxAttempts: 1
    onFailure: Abort
    inputs:
      ImageId: "{{ amiId }}"
      InstanceType: "{{instanceType}}"
      MinInstanceCount: 1
      MaxInstanceCount: 1
      SubnetId: "{{ subnetID }}"
      SecurityGroupIds:
        - "{{ securityGroupID }}"
      UserData: "{{SSMInstallationUserData}}"
      IamInstanceProfileName: "{{ IAMInstanceProfile }}"

  - name: installPreReqs
    action: aws:runCommand
    maxAttempts: 3
    timeoutSeconds: 300
    nextStep: TerminateInstanceOnFailure
    onFailure: Abort
    inputs:
      DocumentName: AWS-RunShellScript
      InstanceIds:
        - "{{startInstances.InstanceIds}}"
      Parameters:
        commands:
          - sudo yum reinstall -y setroubleshoot-server-3.2.30-7.el7.x86_64.rpm #to fail

  - name: TerminateInstanceOnFailure
    action: "aws:changeInstanceState"
    maxAttempts: 3
    inputs:
      InstanceIds:
        - "{{startInstances.InstanceIds}}"
      DesiredState: terminated
